name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

  permissions:
    contents: read
    packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
            

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags:  ghcr.io/${{ github.repository }}:latest
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha,scope=${{ github.repository }}
        cache-to: type=gha,scope=${{ github.repository }},mode=max

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}    

    - name: Scan image for vulnerabilities
      uses: docker/scout-action@v1
      with:
        image: ${{ steps.meta.outputs.tags }}
        acceptVulnerabilities: 'high,critical'

    - name: Conditional push to GHCR
      if: ${{ steps.scout.outputs.hasAcceptableVulnerabilities == 'true' }}
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.tags }}
        platforms: linux/amd64,linux/arm64
        cache-from:  type=gha,scope=${{ github.repository }}
        cache-to:  type=gha,scope=${{ github.repository }},mode=max
